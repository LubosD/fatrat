/*
FatRat download manager
http://fatrat.dolezel.info

Copyright (C) 2006-2008 Lubos Dolezel <lubos a dolezel.info>

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
version 3 as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, see <http://www.gnu.org/licenses/>.

In addition, as a special exemption, Luboš Doležel gives permission
to link the code of FatRat with the OpenSSL project's
"OpenSSL" library (or with modified versions of it that use the; same
license as the "OpenSSL" library), and distribute the linked
executables. You must obey the GNU General Public License in all
respects for all of the code used other than "OpenSSL".
*/

/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -a DbusAdaptor dbus.xml info.dolezel.fatrat
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "DbusAdaptor.h"

#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QMetaObject>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class FatratAdaptor
 */

FatratAdaptor::FatratAdaptor(QObject *parent) : QDBusAbstractAdaptor(parent) {
  // constructor
  setAutoRelaySignals(true);
}

FatratAdaptor::~FatratAdaptor() {
  // destructor
}

void FatratAdaptor::addTransfers(const QString &uris) {
  // handle method call info.dolezel.fatrat.addTransfers
  QMetaObject::invokeMethod(parent(), "addTransfers", Q_ARG(QString, uris));
}

void FatratAdaptor::addTransfersNonInteractive(const QString &uris,
                                               const QString &target,
                                               const QString &className,
                                               int queueID) {
  // handle method call info.dolezel.fatrat.addTransfersNonInteractive
  QMetaObject::invokeMethod(parent(), "addTransfersNonInteractive",
                            Q_ARG(QString, uris), Q_ARG(QString, target),
                            Q_ARG(QString, className), Q_ARG(int, queueID));
}

QStringList FatratAdaptor::getQueues() {
  // handle method call info.dolezel.fatrat.getQueues
  QStringList queues;
  QMetaObject::invokeMethod(parent(), "getQueues",
                            Q_RETURN_ARG(QStringList, queues));
  return queues;
}
