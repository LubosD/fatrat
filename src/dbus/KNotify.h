/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p KNotify org.kde.knotify.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef KNOTIFY_H_1306783995
#define KNOTIFY_H_1306783995

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>


/*
 * Proxy class for interface org.kde.KNotify
 */
class OrgKdeKNotifyInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.KNotify"; }

public:
    OrgKdeKNotifyInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgKdeKNotifyInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> closeNotification(int id)
    {
        QList<QVariant> argumentList;
		argumentList << QVariant::fromValue(id);
        return asyncCallWithArgumentList(QLatin1String("closeNotification"), argumentList);
    }

    inline QDBusPendingReply<int> event(const QString &event, const QString &fromApp, const QVariantList &contexts, const QString &title, const QString &text, const QByteArray &pixmap, const QStringList &actions, int timeout, qlonglong winId)
    {
        QList<QVariant> argumentList;
		argumentList << QVariant::fromValue(event) << QVariant::fromValue(fromApp) << QVariant::fromValue(contexts) << QVariant::fromValue(title) << QVariant::fromValue(text) << QVariant::fromValue(pixmap) << QVariant::fromValue(actions) << QVariant::fromValue(timeout) << QVariant::fromValue(winId);
        return asyncCallWithArgumentList(QLatin1String("event"), argumentList);
    }

    inline QDBusPendingReply<> reconfigure()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("reconfigure"), argumentList);
    }

    inline QDBusPendingReply<> reemit(int id, const QVariantList &contexts)
    {
        QList<QVariant> argumentList;
		argumentList << QVariant::fromValue(id) << QVariant::fromValue(contexts);
        return asyncCallWithArgumentList(QLatin1String("reemit"), argumentList);
    }

    inline QDBusPendingReply<> update(int id, const QString &title, const QString &text, const QByteArray &pixmap, const QStringList &actions)
    {
        QList<QVariant> argumentList;
		argumentList << QVariant::fromValue(id) << QVariant::fromValue(title) << QVariant::fromValue(text) << QVariant::fromValue(pixmap) << QVariant::fromValue(actions);
        return asyncCallWithArgumentList(QLatin1String("update"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void notificationActivated(int id, int action);
    void notificationClosed(int id);
};

namespace org {
  namespace kde {
    typedef ::OrgKdeKNotifyInterface KNotify;
  }
}
#endif
